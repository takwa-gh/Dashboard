@using Dashboard.ViewModels
@model IEnumerable<Dashboard.ViewModels.StationViewModel>
@{
    ViewData["Title"] = "Stations List";
    var userName = ViewData["userName"] as string;
    <link rel="stylesheet" href="~/css/gestion.css" />

}

<div class="card p-4 shadow-sm">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>List of Stations</h2>

        <div class="d-flex align-items-center gap-3">
            @if (User.IsInRole("TeamLeader"))
            {
                <a class="btn btn-dark" asp-controller="Station" asp-action="CreateStation">
                    <i class="fas fa-desktop"></i> New Station
                </a>
            }
            @if (User.IsInRole("Admin"))
            {
                <form method="get" class="d-flex align-items-center gap-2">
                    <input type="text" name="userName" class="form-control form-control-sm w-auto" value="@userName" placeholder="Search by Username">
                    <button type="submit" class="btn btn-outline-dark btn-sm">
                        <i class="fas fa-search"></i> Search
                    </button>
                </form>
            }
        </div>
    </div>

    <div class="table-responsive table-wrapper">
        <table class="table table-hover align-middle">
            <thead class="thead-light">
                <tr>
                    <th rowspan="2"> Station Name</th>

                    @if (User.IsInRole("Teamleader"))
                    {
                        <th>GUM Entries</th>
                        <th>AWT Entries</th>
                    }

                    @if (User.IsInRole("Admin"))
                    {
                        <th colspan="3">GUM</th>
                        <th colspan="3">AWT</th>
                       
                    }

                    <th rowspan="2">Part No.</th>
                    <th rowspan="2">Direct Operator</th>
                    <th rowspan="2">Indirect Operator</th>

                    @if (User.IsInRole("TeamLeader"))
                    {
                        <th>Actions</th>
                    }
                </tr>
                @if (User.IsInRole("Admin")){
                <tr>
                    <th>Min</th>
                    <th>Max</th>
                    <th>Avg</th>
                    <th>Min</th>
                    <th>Max</th>
                    <th>Avg</th>
                </tr>
                }
            </thead>
            <tbody>
                @foreach (var station in Model)
                {
                    <tr>
                        <td>@station.StationName</td>

                        @* Manager: Affichage des entrées GUM *@
                        @if (User.IsInRole("TeamLeader"))
                        {
                            <td>
                            @if (station.GUMEntries?.Any() == true)
                        {
                       var gumList = station.GUMEntries.OrderByDescending(g => g.Timestamp).ToList();
                       var LatestGum = gumList.FirstOrDefault();
                       <div class="dropdown">
                       <button class="btn btn-danger btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        @LatestGum.Value
                        </button>
                       <ul class="dropdown-menu">
                       @foreach (var gum in gumList)
                        {
                    <li class="d-flex align-items-center justify-content-between px-2">
                        <span class="dropdown-item-text">
                            @gum.Value
                             <i class= "fas fa-trash text-danger ms-2" onclick="deleteGumEntry(@gum.Id)"></i>
                            </span>
                    </li>
                        }
                       </ul>
                       </div>
                            }
                             else
                            {
                            <span class="text-muted">-</span>
                            }
                            </td>

                            <td>
    @if (station.AWTEntries?.Any() == true)
    {
        var awtList = station.AWTEntries.OrderByDescending(a => a.Timestamp).ToList();
        var LatestAwt = awtList.FirstOrDefault();
        <div class="dropdown">
            <button class="btn btn-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                @LatestAwt.Value
            </button>
            <ul class="dropdown-menu">
                @foreach (var awt in awtList)
                {
                    <li class="d-flex align-items-center justify-content-between px-2">
                        <span class="dropdown-item-text">
                            @awt.Value
                             <i class= "fas fa-trash text-danger ms-2" style="cursor:pointer;" onclick="deleteAwtEntry(@awt.Id)"></i>
                            </span>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <span class="text-muted">-</span>
    }
</td>

                        }

                        @* Admin: Statistiques *@
                        @if (User.IsInRole("Admin"))
                        {
                            <td>@station.MinGumValue</td>
                            <td>@station.MaxGumValue</td>
                            <td>@station.AverageGumValue.ToString("F2")</td>
                            <td>@station.MinAwtValue</td>
                            <td>@station.MaxAwtValue</td>
                            <td>@station.AverageAwtValue.ToString("F2")</td>
                        }

                        <td>@station.PartNumber</td>
                        <td>@station.DirectOperator</td>
                        <td>@station.IndirectOperator</td>

                        @if (User.IsInRole("TeamLeader"))
                        {
                            <td>
                                <a class="btn btn-sm btn-danger me-1" asp-action="Edit" asp-route-id="@station.StationId">
                                    <i class="fas fa-pencil-alt"></i> Edit
                                </a>
                                <a class="btn btn-sm btn-dark" asp-action="Delete" asp-route-id="@station.StationId">
                                    <i class="fas fa-trash"></i> Delete
                                </a>
                                <div class="mt-2">
                                    <a class="btn btn-sm btn-outline-danger me-1" asp-action="AddGUM" asp-route-id="@station.StationId">
                                        + GUM
                                    </a>
                                    <a class="btn btn-sm btn-outline-dark" asp-action="AddAWT" asp-route-id="@station.StationId">
                                        + AWT
                                    </a>
                                </div>
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    
    <script>
        function deleteGumEntry(id) {
            if (confirm("Delete this GUM value ?")) {
                fetch(`/Station/DeleteGumEntry/${id}`,{
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        location.reload(); // ou mettre à jour dynamiquement
                    } else {
                        alert("Failed to delete GUM entry.");
                    }
                });
            }
        }

        function deleteAwtEntry(id) {
            if (confirm("Delete this AWT value ?")) {
                fetch(`/Station/DeleteAwtEntry/${id}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert("Failed to delete AWT entry.");
                    }
                });
            }
        }
    </script>
}